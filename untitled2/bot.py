import logging
from config import *

from telegram import (ReplyKeyboardMarkup, ReplyKeyboardRemove, Bot, chat, message)
from telegram.ext import (Updater,  CommandHandler, MessageHandler, Filters, RegexHandler,
                          ConversationHandler, InlineQueryHandler)

# Enable logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

status = 0
NUser = 'Name'
messagev = ''
dictionary = {84203003 : 666}
name = {84203003 : 'admin'}


def start(update, context):
    """Send a message when the command /start is issued."""
    global  dictionary
    update.message.reply_text(str(update.message.from_user.id) + '\n' + str(dictionary.get(update.message.from_user.id)) + str(name.get(update.message.from_user.id)))
    if dictionary.get(update.message.from_user.id) == 666:
        update.message.reply_text(text= 'admin',
            reply_markup=ReplyKeyboardMarkup([['–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'], ['–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤'],['–ó–∞–ø–æ–º–Ω–∏ chatID']],
                                             one_time_keyboard=True,
                                             resize_keyboard=1))
    if dictionary.get(update.message.from_user.id) == None:
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
        dictionary.update({update.message.from_user.id: 0})


def help(update, context):
    """Send a message when the command /help is issued."""
    update.message.reply_text('Help!')


def text(update, context):
    """Echo the user message."""
    # update.message.reply_text(update.message.text)
    global  dictionary
    global status
    global name
    global messagev
    if dictionary.get(update.message.from_user.id) == 0:
        if update.message.text == 'parol123':
            update.message.reply_text('–ü—Ä–∏–¥—É–º–∞–π—Ç–µ —Å–µ–±–µ –Ω–∞–∑–≤–∞–Ω–∏–µ')
            dictionary.update({update.message.from_user.id: 2})
        else:
            update.message.reply_text('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ.')
    if dictionary.get(update.message.from_user.id) == 2:

        if update.message.text != 'parol123':
            name.update({update.message.from_user.id :update.message.text})
            dictionary.update({update.message.from_user.id: 3})
            context.bot.send_message(chat_id=84203003, text='–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç ' + NUser)
            update.message.reply_text('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, ' + NUser +
'''! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Ç–≤–æ–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º, –º–Ω–µ –Ω—É–∂–Ω–æ –∏–∑—É—á–∏—Ç—å —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å, —Ç–≤–æ—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.
‚†Ä
–î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω–∞–¥–æ —Å–∫–∏–Ω—É—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, –∞ —Ç–∞–∫–∂–µ —Å–∞–π—Ç –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏. –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –±—É–¥—É—Ç –¥–∞–Ω–Ω—ã–µ, —Ç–µ–º –±—É–¥–µ—Ç –ª—É—á—à–µüëç
‚†Ä
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–ø–∏—à–µ—à—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.
–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å¬ª.
''',
                                          reply_markup=ReplyKeyboardMarkup([['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'], ['–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å']],
                                                                           one_time_keyboard=True,
                                                                           resize_keyboard=1))
    if dictionary.get(update.message.from_user.id) == 3:
        messagev += update.message.text + '\n'
        if update.message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å':
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '')
            update.message.reply_text(NUser+''', —ç—Ç–æ—Ç —ç—Ç–∞–ø –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–πüòå
–ù–∞–ø–∏—à–∏, —á—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –≤–∏–¥–µ—Ç—å –≤ —Å–≤–æ—ë–º –∞–∫–∫–∞—É–Ω—Ç–µ? –ö–∞–∫–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏ –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è –ø–æ –¥–∏–∑–∞–π–Ω—É, –ø–æ–¥–∞—á–µ, —Å—Ç–∏–ª—é?
–ê —Ç–∞–∫–∂–µ, –Ω–∞–ø–∏—à–∏, —á—Ç–æ –±—ã —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ö–æ—Ç–µ–ª –≤–∏–¥–µ—Ç—å –≤ —Å–≤–æ—ë–º –ò–Ω—Å—Ç–∞–≥—Ä–∞–º?
–ß–µ–º –±–æ–ª—å—à–µ –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–µ–º –ª—É—á—à–µüëç
–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –Ω–∞–ø–∏—à–µ—à—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∂–º–∏ ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.
–ï—Å–ª–∏ –Ω–µ—á–µ–≥–æ —Å–∫–∏–¥—ã–≤–∞—Ç—å, —Ç–∞–∫ –∏ –æ—Ç–≤–µ—á–∞–π ¬´–ù–µ—Ç –æ—Å–æ–±—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π¬ª.
''',
                                                                   reply_markup=ReplyKeyboardMarkup([['–û—Ç–ø—Ä–∞–≤–∏—Ç—å.'], ['–ù–µ—Ç –æ—Å–æ–±—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π']],
                                                                   one_time_keyboard=True,
                                                                   resize_keyboard=1))
            context.bot.send_message(chat_id=84203003, text='____–ò–ù–§–ê –û –ö–û–ú–ü–ê–ù–ò–ò____\n - –æ—Ç '+NUser+'\n\n'+messagev)
            messagev = ''
            dictionary.update({update.message.from_user.id: 4})
        if update.message.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
            messagev = messagev.replace('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', '')
            update.message.reply_text("–º—ã —Å–∫–æ—Ä–æ –í–∞–º –æ—Ç–≤–µ—Ç–∏–º")
            context.bot.send_message(chat_id=84203003, text='____–í–û–ü–†–û–°____\n - –æ—Ç '+NUser+'\n\n'+messagev)
            messagev = ''
    if dictionary.get(update.message.from_user.id) == 4:
        messagev += update.message.text + '\n'
        if update.message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å.':
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å.', '')
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '')
            context.bot.send_message(chat_id=84203003,
                                     text='____–ö–ê–ö–ò–ï –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –ü–û–°–¢–´____\n - –æ—Ç ' + NUser + '\n\n' + messagev)
            messagev = ''
            update.message.reply_text('''–Ø —É–∂–µ –Ω–∞—á–∞–ª –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.‚†Ä
            –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å:
            - –º–∞—Å—Å–ª–∞–π–∫–∏–Ω–≥ –∏ –º–∞—Å—Å—Ñ–æ–ª–æ–≤–∏–Ω–≥
            - –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
            –ò —Å–¥–µ–ª–∞—Ç—å –±–∞–∑–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
            ‚†Ä
            –ß–µ—Ä–µ–∑ 4-7 –¥–Ω–µ–π –º—ã —Å–∫–∏–Ω–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–æ—Å—Ç—ã –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏.
             ‚†Ä
            –ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–ø–∏—à–µ—à—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.
            –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å¬ª.
            ''', reply_markup=ReplyKeyboardMarkup([['–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å']],
                                                                       one_time_keyboard=True,
                                                                       resize_keyboard=1))
            dictionary.update({update.message.from_user.id: 5})
        if update.message.text == '–ù–µ—Ç –æ—Å–æ–±—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π':
            dictionary.update({update.message.from_user.id: 5})
            messagev = ''
            update.message.reply_text('''–Ø —É–∂–µ –Ω–∞—á–∞–ª –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.‚†Ä
–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å:
- –º–∞—Å—Å–ª–∞–π–∫–∏–Ω–≥ –∏ –º–∞—Å—Å—Ñ–æ–ª–æ–≤–∏–Ω–≥
- –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
- –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
–ò —Å–¥–µ–ª–∞—Ç—å –±–∞–∑–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
‚†Ä
–ß–µ—Ä–µ–∑ 4-7 –¥–Ω–µ–π –º—ã —Å–∫–∏–Ω–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–æ—Å—Ç—ã –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏.
 ‚†Ä
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–ø–∏—à–µ—à—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.
–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å¬ª.
''', reply_markup=ReplyKeyboardMarkup([['–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å']],
                                                                       one_time_keyboard=True,
                                                                       resize_keyboard=1))
    if dictionary.get(update.message.from_user.id) == 5:
        if update.message.text == '–ú–Ω–µ –≤—Å–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å':
            dictionary.update({update.message.from_user.id: 6})
            update.message.reply_text(NUser+''', —Å—É–ø–µ—Ä üëç
–í —Ç–µ—á–µ–Ω–∏–∏ –¥–≤—É—Ö –Ω–µ–¥–µ–ª—å —è –±—É–¥—É –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –ø–æ—Å—Ç—ã –≤ —Ç–≤–æ—ë–º –∞–∫–∫–∞—É–Ω—Ç–µ.
–ï—Å–ª–∏ —É —Ç–µ–±—è –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±–æ–π —Ç–µ–º–µ, —Å–º–µ–ª–æ –ø–∏—à–∏ –∏ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å¬ª.''',
                                      eply_markup=ReplyKeyboardMarkup([['–ò–∑–º–µ–Ω–∏—Ç—å –¥–∏–∑–∞–π–Ω'], ['–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—ã'], ['–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç']],one_time_keyboard=True,resize_keyboard=1))
        if update.message.text == '–ï—Å—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫–∏.':
            dictionary.update({update.message.from_user.id: 7})
            update.message.reply_text(NUser + ''', –æ–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?
–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –≤–∏–¥–µ—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å?
–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –Ω–∞–ø–∏—à–µ—à—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∏–∑–∞–π–Ω / —Ç–µ–º—ã / —Ç–µ–∫—Å—Ç ¬ª.''',
                                      reply_markup=ReplyKeyboardMarkup([['–ò–∑–º–µ–Ω–∏—Ç—å –¥–∏–∑–∞–π–Ω'], ['–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—ã'], ['–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç']],one_time_keyboard=True,resize_keyboard=1))
    if dictionary.get(update.message.from_user.id) == 6:
        messagev += update.message.text + '\n'
        if update.message.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å.':
            dictionary.update({update.message.from_user.id: 7})
            messagev = messagev.replace('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', '')
            update.message.reply_text("–º—ã —Å–∫–æ—Ä–æ –í–∞–º –æ—Ç–≤–µ—Ç–∏–º")
            context.bot.send_message(chat_id=84203003, text='____–í–û–ü–†–û–° –û –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø–•____\n - –æ—Ç ' + NUser + '\n\n' + messagev)
            messagev = ''
    if dictionary.get(update.message.from_user.id) == 7:
        messagev += update.message.text + '\n'
        if update.message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∏–∑–∞–π–Ω':
            messagev = messagev.replace('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∏–∑–∞–π–Ω', '')
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '')
            context.bot.send_message(chat_id=84203003,
                                     text='____–î–ò–ó–ê–ô–ù____\n - –æ—Ç ' + NUser + '\n\n' + messagev)
            update.message.reply_text(reply_markup=ReplyKeyboardMarkup([['–ú–Ω–µ –≤—Å–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–ï—Å—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫–∏.']],
                                                                       one_time_keyboard=True,
                                                                       resize_keyboard=1))
            messagev = ''
        if update.message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—ã':
            messagev = messagev.replace('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—ã', '')
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '')
            context.bot.send_message(chat_id=84203003,
                                     text='____–¢–ï–ú–´____\n - –æ—Ç ' + NUser + '\n\n' + messagev)
            update.message.reply_text(
                reply_markup=ReplyKeyboardMarkup([['–ú–Ω–µ –≤—Å–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–ï—Å—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫–∏.']],
                                                 one_time_keyboard=True,
                                                 resize_keyboard=1))
            messagev = ''
        if update.message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç':
            messagev = messagev.replace('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', '')
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '')
            context.bot.send_message(chat_id=84203003,
                                     text='____–¢–ï–ö–°–¢____\n - –æ—Ç ' + NUser + '\n\n' + messagev)
            update.message.reply_text(
                reply_markup=ReplyKeyboardMarkup([['–ú–Ω–µ –≤—Å–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–ï—Å—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫–∏.']],
                                                 one_time_keyboard=True,
                                                 resize_keyboard=1))
            messagev = ''
    if dictionary.get(update.message.from_user.id) == 666:
        messagev += ' '+ update.message.text
        if update.message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é':
            messagev = messagev.replace('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', '')
            word = str(messagev.split(' ')[0])
            messagev = messagev.replace(word, '')
            context.bot.send_message(chat_id=int(word),
                                     text = messagev)
        if update.message.text == '–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤':
            for i in dictionary.items():
                context.bot.send_message(chat_id=84203003,
                                     text='ID- '+str(i[0])+"\nSTATUS- "+str(i[1]))
            messagev = ''
def error(update, context):
    """Log Errors caused by Updates."""
    logger.warning('Update "%s" caused error "%s"', update, context.error)
def main():
    """Start the bot."""
    # Create the Updater and pass it your bot's token.
    # Make sure to set use_context=True to use the new context based callbacks
    # Post version 12 this will no longer be necessary
    updater = Updater(TOKEN, use_context=True)

    # Get the dispatcher to register handlers
    dp = updater.dispatcher

    # on different commands - answer in Telegram
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help))

    # on noncommand i.e message - echo the message on Telegram
    dp.add_handler(MessageHandler(Filters.text, text))

    # log all errors
    dp.add_error_handler(error)

    # Start the Bot
    updater.start_polling()

    # Run the bot until you press Ctrl-C or the process receives SIGINT,
    # SIGTERM or SIGABRT. This should be used most of the time, since
    # start_polling() is non-blocking and will stop the bot gracefully.
    updater.idle()


if __name__ == '__main__':
    main()
